{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"R for the Raspberry Pi The aim of r4pi.org is to provide an up-to-date version of R for the Raspberry Pi computer. In addition, we provide access to pre-compiled versions of some of R's most popular packages. Background R is the premier language for statistical computing and has millions of users around the world. There's already a build available for the Raspberry Pi in the default OS repos, but it's a quite an old version. We provide up-to-date builds of R and also take a number of the extension packages from CRAN and pre-compile them ready for use on the Pi to make installation fast and simple. R in action It's possible to write R code in any text editor and a number of the text editors and IDEs available for the Pi support R either straight out-of-the-box or, as in the VSCode screenshot below, with the addition of a plugin. The screenshot above shows some of the analytical and plotting capabilities of R with code borrowed from the \"palmerpenguins\" package website .","title":"R for the Raspberry Pi"},{"location":"#r-for-the-raspberry-pi","text":"The aim of r4pi.org is to provide an up-to-date version of R for the Raspberry Pi computer. In addition, we provide access to pre-compiled versions of some of R's most popular packages.","title":"R for the Raspberry Pi"},{"location":"#background","text":"R is the premier language for statistical computing and has millions of users around the world. There's already a build available for the Raspberry Pi in the default OS repos, but it's a quite an old version. We provide up-to-date builds of R and also take a number of the extension packages from CRAN and pre-compile them ready for use on the Pi to make installation fast and simple.","title":"Background"},{"location":"#r-in-action","text":"It's possible to write R code in any text editor and a number of the text editors and IDEs available for the Pi support R either straight out-of-the-box or, as in the VSCode screenshot below, with the addition of a plugin. The screenshot above shows some of the analytical and plotting capabilities of R with code borrowed from the \"palmerpenguins\" package website .","title":"R in action"},{"location":"installation/","text":"Installation Pre-requisites You must be running the official Raspberry Pi OS (previously called Raspbian) on your system and it must be up to date. Technically, the software should work on all versions of the Pi, however due to memory constraints with older versions and the Pi Zero, we therefore recommend a Raspberry Pi 4 with 2G or more of RAM. You can check your Raspberry Pi model with: cat /sys/firmware/devicetree/base/model;echo You are, of course, welcome to run the software on any Raspberry Pi, but you should expect poor performance on systems with low memory. Setting things up Before you can install the r4pi build of R, we need to do a couple of things to get ready. First we need to import the r4ds gpg encryption key. This allows your system to verify that the software you're installing comes from a trusted source. Open up and terminal and run: curl http://debs.r4pi.org/r4pi.gpg.key | sudo apt-key add - If you're copying and pasting, make sure you get the whole command, including the - on the end! You may be prompted for your password for the sudo apt-key part as this needs to be run as root. Now that your system trusts the r4pi repo, we need to configure your system to 'see' our repo. Run the following: sudo nano /etc/apt/sources.list.d/r4pi.list Paste the following into the screen that appears. ### r4pi.org - please don't edit this file unless you understand what it does ### deb http://debs.r4pi.org buster main Once you're happy that it looks right, type ctrl+x to exit. You'll be asked if you want to save, say yes. Installing the software Now that you've configured your system, we can go ahead and install the software. First update all your sources: sudo apt update You should see the new r4pi.org source in the output somewhere. Next install any updates that are available. sudo apt upgrade Finally, install the r4pi build of R. sudo apt install r-r4pi Assuming that's successful, you're now ready to start using R. You can start R by running: /opt/R/4.0.3/bin/R Optional extras If you want to make you're life a little easier you can make R start by just typing R . You should NOT do this if you have other versions of R installed already. sudo ln -s /opt/R/4.0.3/bin/R /usr/bin/R sudo ln -s /opt/R/4.0.3/bin/Rscript /usr/bin/Rscript","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#pre-requisites","text":"You must be running the official Raspberry Pi OS (previously called Raspbian) on your system and it must be up to date. Technically, the software should work on all versions of the Pi, however due to memory constraints with older versions and the Pi Zero, we therefore recommend a Raspberry Pi 4 with 2G or more of RAM. You can check your Raspberry Pi model with: cat /sys/firmware/devicetree/base/model;echo You are, of course, welcome to run the software on any Raspberry Pi, but you should expect poor performance on systems with low memory.","title":"Pre-requisites"},{"location":"installation/#setting-things-up","text":"Before you can install the r4pi build of R, we need to do a couple of things to get ready. First we need to import the r4ds gpg encryption key. This allows your system to verify that the software you're installing comes from a trusted source. Open up and terminal and run: curl http://debs.r4pi.org/r4pi.gpg.key | sudo apt-key add - If you're copying and pasting, make sure you get the whole command, including the - on the end! You may be prompted for your password for the sudo apt-key part as this needs to be run as root. Now that your system trusts the r4pi repo, we need to configure your system to 'see' our repo. Run the following: sudo nano /etc/apt/sources.list.d/r4pi.list Paste the following into the screen that appears. ### r4pi.org - please don't edit this file unless you understand what it does ### deb http://debs.r4pi.org buster main Once you're happy that it looks right, type ctrl+x to exit. You'll be asked if you want to save, say yes.","title":"Setting things up"},{"location":"installation/#installing-the-software","text":"Now that you've configured your system, we can go ahead and install the software. First update all your sources: sudo apt update You should see the new r4pi.org source in the output somewhere. Next install any updates that are available. sudo apt upgrade Finally, install the r4pi build of R. sudo apt install r-r4pi Assuming that's successful, you're now ready to start using R. You can start R by running: /opt/R/4.0.3/bin/R","title":"Installing the software"},{"location":"installation/#optional-extras","text":"If you want to make you're life a little easier you can make R start by just typing R . You should NOT do this if you have other versions of R installed already. sudo ln -s /opt/R/4.0.3/bin/R /usr/bin/R sudo ln -s /opt/R/4.0.3/bin/Rscript /usr/bin/Rscript","title":"Optional extras"},{"location":"next_steps/","text":"Next steps Now that you have R installed, you might be wondering what you can do with it? Understanding the basics R4DS We think the best place to start is by working through the exercises in the book R for Data Science (often just referred to as \"R4DS\"). You can buy a physical copy of the book, but you can also read the whole thing online, for free! ModernDive Another great book that's more statistics-heavy that you can read for free online is, \" Statistical Inference via Data Science: A ModernDive into R and the Tidyverse \" (you can just call this one \"ModernDive\"). Learning Statistics with R Learning Statistics with R For experienced programmers A good place to start might be the \" learn X in Y minutes \" overview. For experienced R programmers Hadley Wickham's Advanced R is also available online.","title":"Next steps"},{"location":"next_steps/#next-steps","text":"Now that you have R installed, you might be wondering what you can do with it?","title":"Next steps"},{"location":"next_steps/#understanding-the-basics","text":"","title":"Understanding the basics"},{"location":"next_steps/#r4ds","text":"We think the best place to start is by working through the exercises in the book R for Data Science (often just referred to as \"R4DS\"). You can buy a physical copy of the book, but you can also read the whole thing online, for free!","title":"R4DS"},{"location":"next_steps/#moderndive","text":"Another great book that's more statistics-heavy that you can read for free online is, \" Statistical Inference via Data Science: A ModernDive into R and the Tidyverse \" (you can just call this one \"ModernDive\").","title":"ModernDive"},{"location":"next_steps/#learning-statistics-with-r","text":"Learning Statistics with R","title":"Learning Statistics with R"},{"location":"next_steps/#for-experienced-programmers","text":"A good place to start might be the \" learn X in Y minutes \" overview.","title":"For experienced programmers"},{"location":"next_steps/#for-experienced-r-programmers","text":"Hadley Wickham's Advanced R is also available online.","title":"For experienced R programmers"},{"location":"using_r/","text":"Using R R has it's own interactive REPL ( Read-eval-print loop ) and this is where many R users on Linux will start. Installing packages By deafult, our build of R uses the r4pi custom CRAN mirror for packages. You can see this by running the following inside of R: options(\"repos\") This mirror is a little different from public CRAN. It currently offers a much reduced package set (all of which were sourced directly from CRAN itself) that are pre-compiled for the Raspberry Pi. Public CRAN only offer source code packages for Linux users which can make some packages difficult and time consuming to install. Our pre-compiled packages are an effort to make the installation process simpler. At present, the packages available should be adequate to work through the R4DS book -- our primary aim -- but may not contain enough packages for all users. In this case the user is welcome to switch back to using public CRAN. Packages are installed as usual using, for example: install.packages(\"tidyverse\")","title":"Using R"},{"location":"using_r/#using-r","text":"R has it's own interactive REPL ( Read-eval-print loop ) and this is where many R users on Linux will start.","title":"Using R"},{"location":"using_r/#installing-packages","text":"By deafult, our build of R uses the r4pi custom CRAN mirror for packages. You can see this by running the following inside of R: options(\"repos\") This mirror is a little different from public CRAN. It currently offers a much reduced package set (all of which were sourced directly from CRAN itself) that are pre-compiled for the Raspberry Pi. Public CRAN only offer source code packages for Linux users which can make some packages difficult and time consuming to install. Our pre-compiled packages are an effort to make the installation process simpler. At present, the packages available should be adequate to work through the R4DS book -- our primary aim -- but may not contain enough packages for all users. In this case the user is welcome to switch back to using public CRAN. Packages are installed as usual using, for example: install.packages(\"tidyverse\")","title":"Installing packages"}]}